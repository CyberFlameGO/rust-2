(function() {var implementors = {};
implementors["byteorder"] = [{"text":"impl RefUnwindSafe for BigEndian","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LittleEndian","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl RefUnwindSafe for TokenStream","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LexError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Span","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Punct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ident","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Literal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TokenTree","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Delimiter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Spacing","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IntoIter","synthetic":true,"types":[]}];
implementors["protobuf"] = [{"text":"impl RefUnwindSafe for CachedSize","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for CodedInputStream&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for CodedOutputStream&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for RepeatedField&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SingularField&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for SingularPtrField&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnknownFields","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; RefUnwindSafe for UnknownFieldsIter&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnknownValues","synthetic":true,"types":[]},{"text":"impl&lt;'o&gt; RefUnwindSafe for UnknownValuesIter&lt;'o&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnknownValue","synthetic":true,"types":[]},{"text":"impl&lt;'o&gt; RefUnwindSafe for UnknownValueRef&lt;'o&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileDescriptorSet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileDescriptorProto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorProto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorProto_ExtensionRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DescriptorProto_ReservedRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtensionRangeOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldDescriptorProto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OneofDescriptorProto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnumDescriptorProto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnumDescriptorProto_EnumReservedRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnumValueDescriptorProto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ServiceDescriptorProto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MethodDescriptorProto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MessageOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OneofOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnumOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnumValueOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ServiceOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MethodOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UninterpretedOption","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UninterpretedOption_NamePart","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SourceCodeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SourceCodeInfo_Location","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeneratedCodeInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeneratedCodeInfo_Annotation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldDescriptorProto_Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldDescriptorProto_Label","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FileOptions_OptimizeMode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldOptions_CType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldOptions_JSType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MethodOptions_IdempotencyLevel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Version","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CodeGeneratorRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CodeGeneratorResponse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CodeGeneratorResponse_File","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CodeGeneratorResponse_Feature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WireType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WireError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ProtobufError","synthetic":true,"types":[]},{"text":"impl&lt;M, T&gt; RefUnwindSafe for ExtFieldOptional&lt;M, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M, T&gt; RefUnwindSafe for ExtFieldRepeated&lt;M, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Lazy&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for LazyV2&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnumDescriptor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnumValueDescriptor","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for MessageDescriptor","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for FieldDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ReflectValueRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ReflectFieldRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeFloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeDouble","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeInt32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeInt64","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeUint32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeUint64","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeSint32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeSint64","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeFixed32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeFixed64","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeSfixed32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeSfixed64","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeBool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeBytes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProtobufTypeChars","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; RefUnwindSafe for ProtobufTypeEnum&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; RefUnwindSafe for ProtobufTypeMessage&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Any","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Api","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Method","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mixin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Duration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Empty","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldMask","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SourceContext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Struct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ListValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Timestamp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Enum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnumValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Option","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DoubleValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FloatValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Int64Value","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UInt64Value","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Int32Value","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UInt32Value","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoolValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BytesValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Value_oneof_kind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NullValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Field_Kind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Field_Cardinality","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Syntax","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl RefUnwindSafe for Attribute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetaList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetaNameValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Field","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldsNamed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Variant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VisCrate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VisPublic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VisRestricted","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Arm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Label","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MethodTurbofish","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAssign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAsync","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprAwait","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBinary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprBreak","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprCall","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprCast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprClosure","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprContinue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprField","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprForLoop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprIf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprLet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprLit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprLoop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprMatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprParen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprPath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprReference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprRepeat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprReturn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprTuple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprUnary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprWhile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExprYield","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Index","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConstParam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Generics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LifetimeDef","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PredicateEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PredicateType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitBound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeParam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ForeignItemFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ForeignItemMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ForeignItemStatic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ForeignItemType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImplItemConst","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImplItemMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImplItemMethod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImplItemType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemConst","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemEnum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemExternCrate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemForeignMod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemImpl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemMacro2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemMod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemStatic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemTrait","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemTraitAlias","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemUnion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ItemUse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Receiver","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Signature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitItemConst","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitItemMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitItemMethod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitItemType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UseGlob","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UseGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UseName","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UsePath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UseRename","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for File","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lifetime","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitBool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitByte","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitByteStr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitChar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitFloat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitInt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LitStr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataEnum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataUnion","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeriveInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Block","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Local","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abi","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BareFnArg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeBareFn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeGroup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeInfer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeNever","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeParen","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypePath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypePtr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeReference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeSlice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeTuple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Variadic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FieldPat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatIdent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatLit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatMacro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatOr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatPath","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatReference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatRest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatSlice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatTuple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatTupleStruct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PatWild","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Binding","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Constraint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Path","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathSegment","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QSelf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Error","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttrStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Meta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NestedMeta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fields","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Visibility","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenericMethodArgument","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RangeLimits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Expr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Member","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenericParam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TypeParamBound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WherePredicate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FnArg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ForeignItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImplItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Item","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TraitItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UseTree","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StrStyle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Data","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BinOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stmt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReturnType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenericArgument","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PathArguments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Underscore","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abstract","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for As","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Async","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Auto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Await","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Become","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Box","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Break","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Const","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Continue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Crate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Default","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Do","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dyn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Else","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Enum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Extern","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Final","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for For","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for If","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Impl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for In","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Let","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Loop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Macro","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Match","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Move","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mut","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Override","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Priv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ref","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Return","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelfType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelfValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Static","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Struct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Super","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Trait","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Try","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Typeof","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Union","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unsafe","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unsized","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Use","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Virtual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Where","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for While","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Yield","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Add","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for And","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndAnd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AndEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for At","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bang","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Caret","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CaretEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Colon","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Colon2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Comma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Div","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DivEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dollar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dot2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dot3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DotDotEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Eq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EqEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Le","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MulEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ne","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Or","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OrEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OrOr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Question","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RArrow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LArrow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RemEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FatArrow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Semi","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Shl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShlEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Shr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShrEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Star","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubEq","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tilde","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Brace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bracket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Paren","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Group","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; RefUnwindSafe for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; RefUnwindSafe for PairsMut&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !RefUnwindSafe for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; RefUnwindSafe for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; RefUnwindSafe for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Nothing","synthetic":true,"types":[]}];
implementors["tensorflow"] = [{"text":"impl RefUnwindSafe for ImportGraphDefOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportGraphDefResults","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Graph","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for OperationIter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttrMetadata","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Operation","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Input&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Output","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutputName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for OperationDescription&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FunctionOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Function","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Scope","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SavedModelBundle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Session","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FetchToken","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; !RefUnwindSafe for SessionRunArgs&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Device","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Variable","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for VariableBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SaveModelError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorInfo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SignatureDef","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MetaGraphDef","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SavedModelBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SavedModelSaver","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Status","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SessionOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QInt8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QUInt8","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QInt16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QUInt16","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QInt32","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BFloat16","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Tensor&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TensorType&gt;::InnerType: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Library","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpDef","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpArgDef","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpAttrDef","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Shape","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for WhileBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AttrType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Code","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataType","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Expr&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Add&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Sub&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Mul&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Div&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Rem&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for TruncateDiv&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Neg&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Variable&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Placeholder&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; RefUnwindSafe for Constant&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as TensorType&gt;::InnerType: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Assign&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'l&gt; !RefUnwindSafe for Compiler&lt;'l&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpLevel","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ShapeHint&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;W&gt; RefUnwindSafe for RecordWriter&lt;W&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; RefUnwindSafe for RecordReader&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RecordReadError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Multiply","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Subtract","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abort","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Abs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccumulateNV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccumulatorApplyGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccumulatorNumAccumulated","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccumulatorSetGlobalStep","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AccumulatorTakeGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Acos","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Acosh","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Add","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddManySparseToTensorsMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddN","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddSparseToTensorsMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AddV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdjustContrast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdjustContrastv2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdjustHue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdjustSaturation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for All","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AllCandidateSampler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AllToAll","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Angle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnonymousIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnonymousIteratorV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnonymousMemoryCache","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnonymousMultiDeviceIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnonymousRandomSeedGenerator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AnonymousSeedGenerator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Any","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyAdaMax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyAdadelta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyAdagrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyAdagradDA","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyAdagradV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyAdam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyAddSign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyCenteredRMSProp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyFtrl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyFtrlV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyGradientDescent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyMomentum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyPowerSign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyProximalAdagrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyProximalGradientDescent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApplyRMSProp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ApproximateEqual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ArgMax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ArgMin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AsString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Asin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Asinh","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Assert","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AssertCardinalityDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AssertNextDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Assign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AssignAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AssignAddVariableOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AssignSub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AssignSubVariableOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AssignVariableOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Atan","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Atan2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Atanh","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AudioSpectrogram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AudioSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AudioSummaryV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AutoShardDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AvgPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AvgPool3D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AvgPool3DGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AvgPoolGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BandedTriangularSolve","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Barrier","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BarrierClose","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BarrierIncompleteSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BarrierInsertMany","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BarrierReadySize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BarrierTakeMany","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Batch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchCholesky","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchCholeskyGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchDatasetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchFFT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchFFT2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchFFT3D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchFunction","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchIFFT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchIFFT2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchIFFT3D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchMatMul","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchMatMulV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchMatrixBandPart","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchMatrixDeterminant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchMatrixDiag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchMatrixDiagPart","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchMatrixInverse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchMatrixSetDiag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchMatrixSolve","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchMatrixSolveLs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchMatrixTriangularSolve","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchNormWithGlobalNormalization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchNormWithGlobalNormalizationGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchSelfAdjointEig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchSelfAdjointEigV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchSvd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchToSpace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BatchToSpaceND","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BesselI0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BesselI0e","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BesselI1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BesselI1e","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BesselJ0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BesselJ1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BesselK0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BesselK0e","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BesselK1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BesselK1e","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BesselY0","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BesselY1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Betainc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BiasAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BiasAddGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BiasAddV1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bincount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bitcast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BitwiseAnd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BitwiseOr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BitwiseXor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockLSTM","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockLSTMGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockLSTMGradV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockLSTMV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesAggregateStats","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesBucketize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesCalculateBestFeatureSplit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesCalculateBestFeatureSplitV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesCalculateBestGainsPerFeature","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesCenterBias","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesCreateEnsemble","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesCreateQuantileStreamResource","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesDeserializeEnsemble","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesEnsembleResourceHandleOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesExampleDebugOutputs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesFlushQuantileSummaries","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesGetEnsembleStates","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesMakeQuantileSummaries","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesMakeStatsSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesPredict","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesQuantileStreamResourceAddSummaries","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesQuantileStreamResourceDeserialize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesQuantileStreamResourceFlush","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesQuantileStreamResourceGetBucketBoundaries","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesQuantileStreamResourceHandleOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesSerializeEnsemble","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesSparseAggregateStats","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesSparseCalculateBestFeatureSplit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesTrainingPredict","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesUpdateEnsemble","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BoostedTreesUpdateEnsembleV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BroadcastArgs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BroadcastGradientArgs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BroadcastTo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Bucketize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BytesProducedStatsDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CSRSparseMatrixComponents","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CSRSparseMatrixToDense","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CSRSparseMatrixToSparseTensor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CSVDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CSVDatasetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CTCBeamSearchDecoder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CTCGreedyDecoder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CTCLoss","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CTCLossV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CacheDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CacheDatasetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Case","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ceil","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckNumerics","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CheckNumericsV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cholesky","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CholeskyGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChooseFastestBranchDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ChooseFastestDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClipByValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CloseSummaryWriter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CollectiveBcastRecv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CollectiveBcastRecvV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CollectiveBcastSend","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CollectiveBcastSendV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CollectiveGather","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CollectiveGatherV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CollectivePermute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CollectiveReduce","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CollectiveReduceV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CombinedNonMaxSuppression","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompareAndBitpack","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Complex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComplexAbs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompressElement","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComputeAccidentalHits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ComputeBatchSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Concat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConcatOffset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConcatV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConcatenateDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConditionalAccumulator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConfigureDistributedTPU","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConfigureTPUEmbedding","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Conj","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConjugateTranspose","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Const","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConsumeMutexLock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ControlTrigger","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Conv2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Conv2DBackpropFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Conv2DBackpropInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Conv3D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Conv3DBackpropFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Conv3DBackpropFilterV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Conv3DBackpropInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Conv3DBackpropInputV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Copy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CopyHost","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cos","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cosh","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CountUpTo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateSummaryDbWriter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CreateSummaryFileWriter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CropAndResize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CropAndResizeGradBoxes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CropAndResizeGradImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cross","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CrossReplicaSum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CudnnRNN","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CudnnRNNBackprop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CudnnRNNBackpropV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CudnnRNNBackpropV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CudnnRNNCanonicalToParams","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CudnnRNNCanonicalToParamsV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CudnnRNNParamsSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CudnnRNNParamsToCanonical","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CudnnRNNParamsToCanonicalV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CudnnRNNV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CudnnRNNV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cumprod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Cumsum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CumulativeLogsumexp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataFormatDimMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataFormatVecPermute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataServiceDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DataServiceDatasetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DatasetCardinality","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DatasetFromGraph","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DatasetToGraph","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DatasetToGraphV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DatasetToSingleElement","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DatasetToTFRecord","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dawsn","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugGradientIdentity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugGradientRefIdentity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugIdentity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugIdentityV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugNanCount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugNumericSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DebugNumericSummaryV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeAndCropJpeg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeBase64","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeBmp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeCSV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeCompressed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeGif","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeImage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeJSONExample","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeJpeg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodePaddedRaw","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodePng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeProtoV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeRaw","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeWav","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeepCopy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeleteIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeleteMemoryCache","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeleteMultiDeviceIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeleteRandomSeedGenerator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeleteSeedGenerator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeleteSessionTensor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DenseBincount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DenseCountSparseOutput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DenseToCSRSparseMatrix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DenseToDenseSetOperation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DenseToSparseBatchDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DenseToSparseSetOperation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthToSpace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthwiseConv2dNative","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthwiseConv2dNativeBackpropFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DepthwiseConv2dNativeBackpropInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dequantize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeserializeIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeserializeManySparse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeserializeSparse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DestroyResourceOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DestroyTemporaryVariable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DeviceIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Diag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DiagPart","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Digamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dilation2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dilation2DBackpropFilter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Dilation2DBackpropInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DirectedInterleaveDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Div","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DivNoNan","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawBoundingBoxes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DrawBoundingBoxesV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DummyIterationCounter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DummyMemoryCache","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DummySeedGenerator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DynamicPartition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DynamicStitch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EagerPyFunc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EditDistance","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Eig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Einsum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Elu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EluGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Empty","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmptyTensorList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EmptyTensorMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EncodeBase64","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EncodeJpeg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EncodeJpegVariableQuality","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EncodePng","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EncodeProto","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EncodeWav","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnqueueTPUEmbeddingIntegerBatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnqueueTPUEmbeddingRaggedTensorBatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnqueueTPUEmbeddingSparseBatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnqueueTPUEmbeddingSparseTensorBatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EnsureShape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Enter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Equal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Erf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Erfc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Erfinv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EuclideanNorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Exp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExpandDims","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalAssertNextDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalAutoShardDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalBytesProducedStatsDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalCSVDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalChooseFastestDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalDatasetCardinality","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalDatasetToTFRecord","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalDenseToSparseBatchDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalDirectedInterleaveDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalGroupByReducerDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalGroupByWindowDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalIgnoreErrorsDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalIteratorGetDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalLMDBDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalLatencyStatsDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalMapAndBatchDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalMapDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalMatchingFilesDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalMaxIntraOpParallelismDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalNonSerializableDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalParallelInterleaveDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalParseExampleDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalPrivateThreadPoolDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalRandomDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalRebatchDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalScanDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalSetStatsAggregatorDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalSleepDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalSlidingWindowDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalSqlDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalStatsAggregatorHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalStatsAggregatorSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalTakeWhileDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalThreadPoolDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalThreadPoolHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalUnbatchDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExperimentalUniqueDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Expint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Expm1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtractGlimpse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtractGlimpseV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtractImagePatches","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtractJpegShape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ExtractVolumePatches","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FFT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FFT2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FFT3D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FIFOQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FIFOQueueV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fact","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FakeParam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FakeQuantWithMinMaxArgs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FakeQuantWithMinMaxArgsGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FakeQuantWithMinMaxVars","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FakeQuantWithMinMaxVarsGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FakeQuantWithMinMaxVarsPerChannel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FakeQuantWithMinMaxVarsPerChannelGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FakeQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fill","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterByLastComponentDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FinalizeDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fingerprint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FixedLengthRecordDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FixedLengthRecordDatasetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FixedLengthRecordReader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FixedLengthRecordReaderV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FixedUnigramCandidateSampler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlatMapDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Floor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FloorDiv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FloorMod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FlushSummaryWriter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for For","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FractionalAvgPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FractionalAvgPoolGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FractionalMaxPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FractionalMaxPoolGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FresnelCos","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FresnelSin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FusedBatchNorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FusedBatchNormGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FusedBatchNormGradV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FusedBatchNormGradV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FusedBatchNormV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FusedBatchNormV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FusedPadConv2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FusedResizeAndPadConv2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GRUBlockCell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GRUBlockCellGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Gather","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GatherNd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GatherV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenerateBoundingBoxProposals","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GenerateVocabRemapping","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GeneratorDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetSessionHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetSessionHandleV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetSessionTensor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Greater","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GreaterEqual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GroupByReducerDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GroupByWindowDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GuaranteeConst","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HSVToRGB","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HashTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HashTableV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HistogramFixedWidth","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for HistogramSummary","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for HostConst","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IFFT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IFFT2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IFFT3D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IRFFT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IRFFT2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IRFFT3D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Identity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IdentityN","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IdentityReader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IdentityReaderV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for If","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Igamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IgammaGradA","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Igammac","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IgnoreErrorsDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Imag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageProjectiveTransformV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImageProjectiveTransformV3","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ImageSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImmutableConst","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ImportEvent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InTopK","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InTopKV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InfeedDequeue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InfeedDequeueTuple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InfeedEnqueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InfeedEnqueuePrelinearizedBuffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InfeedEnqueueTuple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitializeTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitializeTableFromDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitializeTableFromTextFile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitializeTableFromTextFileV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InitializeTableV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InplaceAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InplaceSub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InplaceUpdate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InterleaveDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Inv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Invert","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for InvertPermutation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsBoostedTreesEnsembleInitialized","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsBoostedTreesQuantileStreamResourceInitialized","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsFinite","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsInf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsNan","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsVariableInitialized","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IsotonicRegression","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Iterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IteratorFromStringHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IteratorFromStringHandleV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IteratorGetDevice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IteratorGetNext","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IteratorGetNextAsOptional","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IteratorGetNextSync","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IteratorToStringHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IteratorV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KMC2ChainInitialization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KmeansPlusPlusInitialization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for KthOrderStatistic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for L2Loss","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LMDBDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LMDBReader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LRN","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LRNGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LSTMBlockCell","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LSTMBlockCellGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LatencyStatsDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LeakyRelu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LeakyReluGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LearnedUnigramCandidateSampler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LeftShift","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LegacyParallelInterleaveDatasetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Less","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LessEqual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lgamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinSpace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ListDiff","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadAndRemapMatrix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingADAMParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingADAMParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingAdadeltaParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingAdadeltaParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingAdagradParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingAdagradParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingCenteredRMSPropParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingFTRLParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingFTRLParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingFrequencyEstimatorParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingFrequencyEstimatorParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingMDLAdagradLightParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingMomentumParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingMomentumParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingProximalAdagradParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingProximalAdagradParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingProximalYogiParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingProximalYogiParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingRMSPropParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingRMSPropParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingStochasticGradientDescentParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoadTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Log","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Log1p","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogMatrixDeterminant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogSoftmax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogUniformCandidateSampler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogicalAnd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogicalNot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LogicalOr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LookupTableExport","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LookupTableExportV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LookupTableFind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LookupTableFindV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LookupTableImport","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LookupTableImportV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LookupTableInsert","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LookupTableInsertV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LookupTableRemoveV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LookupTableSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LookupTableSizeV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LoopCond","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LowerBound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Lu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MakeIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MakeUnique","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MapAndBatchDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MapClear","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MapDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MapDefun","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MapIncompleteSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MapPeek","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MapSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MapStage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MapUnstage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MapUnstageNoKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatMul","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatchingFiles","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatchingFilesDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixBandPart","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixDeterminant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixDiag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixDiagPart","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixDiagPartV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixDiagPartV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixDiagV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixDiagV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixExponential","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixInverse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixLogarithm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixSetDiag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixSetDiagV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixSetDiagV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixSolve","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixSolveLs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixSquareRoot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MatrixTriangularSolve","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Max","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxIntraOpParallelismDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPool3D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPool3DGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPool3DGradGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPoolGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPoolGradGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPoolGradGradV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPoolGradGradWithArgmax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPoolGradV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPoolGradWithArgmax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPoolV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MaxPoolWithArgmax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Maximum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mean","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Merge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MergeSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MergeV2Checkpoints","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mfcc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Min","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Minimum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MirrorPad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MirrorPadGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MlirPassthroughOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ModelDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mul","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MulNoNan","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MultiDeviceIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MultiDeviceIteratorFromStringHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MultiDeviceIteratorGetNextFromShard","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MultiDeviceIteratorInit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MultiDeviceIteratorToStringHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Multinomial","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MutableDenseHashTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MutableDenseHashTableV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MutableHashTable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MutableHashTableOfTensors","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MutableHashTableOfTensorsV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MutableHashTableV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MutexLock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for MutexV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NcclAllReduce","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NcclBroadcast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NcclReduce","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Ndtri","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NearestNeighbors","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Neg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NegTrain","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NextAfter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NextIteration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NoOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NonDeterministicInts","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NonMaxSuppression","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NonMaxSuppressionV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NonMaxSuppressionV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NonMaxSuppressionV4","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NonMaxSuppressionV5","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NonMaxSuppressionWithOverlaps","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NonSerializableDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NotEqual","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for NthElement","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OneHot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OneShotIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OnesLike","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OptimizeDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OptimizeDatasetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OptionalFromValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OptionalGetValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OptionalHasValue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OptionalNone","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OptionsDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OrderedMapClear","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OrderedMapIncompleteSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OrderedMapPeek","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OrderedMapSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OrderedMapStage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OrderedMapUnstage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OrderedMapUnstageNoKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutfeedDequeue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutfeedDequeueTuple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutfeedDequeueTupleV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutfeedDequeueV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutfeedEnqueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OutfeedEnqueueTuple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pack","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PadV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PaddedBatchDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PaddedBatchDatasetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PaddingFIFOQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PaddingFIFOQueueV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParallelBatchDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParallelConcat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParallelDynamicStitch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParallelInterleaveDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParallelInterleaveDatasetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParallelInterleaveDatasetV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParallelInterleaveDatasetV4","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParallelMapDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParallelMapDatasetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParameterizedTruncatedNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseExample","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseExampleDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseExampleDatasetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseExampleV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseSequenceExample","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseSequenceExampleV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseSingleExample","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseSingleSequenceExample","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseTensor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PartitionedCall","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Placeholder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PlaceholderV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PlaceholderWithDefault","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Polygamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PopulationCount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Pow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrefetchDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Prelinearize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrelinearizeTuple","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PreventGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Print","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrintV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PriorityQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PriorityQueueV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PrivateThreadPoolDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Prod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PyFunc","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PyFuncStateless","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Qr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizeAndDequantize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizeAndDequantizeV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizeAndDequantizeV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizeAndDequantizeV4","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizeAndDequantizeV4Grad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizeDownAndShrinkRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizeV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedAvgPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedBatchNormWithGlobalNormalization","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedBiasAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedConcat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedConv2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedConv2DAndRelu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedConv2DAndReluAndRequantize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedConv2DAndRequantize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedConv2DPerChannel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedConv2DWithBias","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedConv2DWithBiasAndRelu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedConv2DWithBiasAndReluAndRequantize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedConv2DWithBiasAndRequantize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedConv2DWithBiasSignedSumAndReluAndRequantize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedConv2DWithBiasSumAndRelu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedConv2DWithBiasSumAndReluAndRequantize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedDepthwiseConv2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedDepthwiseConv2DWithBias","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedDepthwiseConv2DWithBiasAndRelu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedInstanceNorm","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedMatMul","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedMatMulWithBias","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedMatMulWithBiasAndDequantize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedMatMulWithBiasAndRelu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedMatMulWithBiasAndReluAndRequantize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedMatMulWithBiasAndRequantize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedMaxPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedMul","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedRelu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedRelu6","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedReluX","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedReshape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QuantizedResizeBilinear","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueClose","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueCloseV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueDequeue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueDequeueMany","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueDequeueManyV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueDequeueUpTo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueDequeueUpToV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueDequeueV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueEnqueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueEnqueueMany","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueEnqueueManyV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueEnqueueV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueIsClosed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueIsClosedV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for QueueSizeV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RFFT","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RFFT2D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RFFT3D","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RGBToHSV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RaggedBincount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RaggedCountSparseOutput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RaggedCross","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RaggedGather","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RaggedRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RaggedTensorFromVariant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RaggedTensorToSparse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RaggedTensorToTensor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RaggedTensorToVariant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RaggedTensorToVariantGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomCrop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomGamma","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomGammaGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomPoisson","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomPoissonV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomShuffle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomShuffleQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomShuffleQueueV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomStandardNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomUniform","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RandomUniformInt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Range","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RangeDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rank","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadFile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadVariableOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderNumRecordsProduced","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderNumRecordsProducedV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderNumWorkUnitsCompleted","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderNumWorkUnitsCompletedV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderRead","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderReadUpTo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderReadUpToV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderReadV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderReset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderResetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderRestoreState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderRestoreStateV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderSerializeState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderSerializeStateV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Real","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RealDiv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RebatchDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RebatchDatasetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Reciprocal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReciprocalGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecordInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Recv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecvTPUEmbeddingActivations","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReduceDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReduceJoin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RefEnter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RefExit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RefIdentity","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RefMerge","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RefNextIteration","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RefSelect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RefSwitch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegexFullMatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegexReplace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RegisterDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Relu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Relu6","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Relu6Grad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReluGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RemoteCall","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RepeatDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequantizationRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequantizationRangePerChannel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Requantize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequantizePerChannel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Reshape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResizeArea","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResizeBicubic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResizeBicubicGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResizeBilinear","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResizeBilinearGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResizeNearestNeighbor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResizeNearestNeighborGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceAccumulatorApplyGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceAccumulatorNumAccumulated","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceAccumulatorSetGlobalStep","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceAccumulatorTakeGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyAdaMax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyAdadelta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyAdagrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyAdagradDA","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyAdagradV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyAdam","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyAdamWithAmsgrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyAddSign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyCenteredRMSProp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyFtrl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyFtrlV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyGradientDescent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyKerasMomentum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyMomentum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyPowerSign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyProximalAdagrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyProximalGradientDescent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceApplyRMSProp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceConditionalAccumulator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceCountUpTo","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceGather","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceGatherNd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceScatterAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceScatterDiv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceScatterMax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceScatterMin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceScatterMul","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceScatterNdAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceScatterNdMax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceScatterNdMin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceScatterNdSub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceScatterNdUpdate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceScatterSub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceScatterUpdate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceSparseApplyAdadelta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceSparseApplyAdagrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceSparseApplyAdagradDA","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceSparseApplyAdagradV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceSparseApplyCenteredRMSProp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceSparseApplyFtrl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceSparseApplyFtrlV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceSparseApplyKerasMomentum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceSparseApplyMomentum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceSparseApplyProximalAdagrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceSparseApplyProximalGradientDescent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceSparseApplyRMSProp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ResourceStridedSliceAssign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Restore","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RestoreSlice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RestoreV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingADAMParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingADAMParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingAdadeltaParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingAdadeltaParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingAdagradParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingAdagradParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingCenteredRMSPropParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingFTRLParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingFTRLParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingFrequencyEstimatorParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingFrequencyEstimatorParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingMDLAdagradLightParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingMomentumParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingMomentumParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingProximalAdagradParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingProximalAdagradParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingProximalYogiParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingProximalYogiParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingRMSPropParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingRMSPropParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingStochasticGradientDescentParameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RetrieveTPUEmbeddingStochasticGradientDescentParametersGradAccumDebug","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Reverse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReverseSequence","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReverseV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RightShift","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscAbs","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscBinaryArithmetic","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscBinaryComparison","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscBitcast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscBroadcast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscCast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscCeil","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscCholesky","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscConcat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscCondition","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscConv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscCos","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscDiv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscDot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscExp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscFft","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscFloor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscGather","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscImag","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscIsFinite","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscLog","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscLogicalAnd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscLogicalNot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscLogicalOr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscMax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscMin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscMul","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscNeg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscPad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscPow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscRandomUniform","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscReal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscReduce","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscRem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscReshape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscReverse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscScatter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscShape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscSign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscSlice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscSort","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscSqueeze","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscSub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscTranspose","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscTriangularSolve","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscUnary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RiscWhile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RngReadAndSkip","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RngSkip","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Roll","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Round","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Rsqrt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RsqrtGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SampleDistortedBoundingBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SampleDistortedBoundingBoxV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SamplingDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Save","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SaveDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SaveSlices","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SaveV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScalarSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScaleAndTranslate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScaleAndTranslateGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScanDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScatterAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScatterDiv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScatterMax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScatterMin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScatterMul","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScatterNd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScatterNdAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScatterNdMax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScatterNdMin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScatterNdNonAliasingAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScatterNdSub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScatterNdUpdate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScatterSub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ScatterUpdate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SdcaFprint","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SdcaOptimizer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SdcaOptimizerV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SdcaShrinkL1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SegmentMax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SegmentMean","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SegmentMin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SegmentProd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SegmentSum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Select","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelectV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelfAdjointEig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SelfAdjointEigV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Selu","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SeluGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Send","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SendTPUEmbeddingGradients","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SerializeIterator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SerializeManySparse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SerializeSparse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SerializeTensor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SetStatsAggregatorDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Shape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShapeN","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShardDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShardedFilename","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShardedFilespec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShuffleAndRepeatDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShuffleAndRepeatDatasetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShuffleDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShuffleDatasetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShuffleDatasetV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ShutdownDistributedTPU","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sigmoid","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SigmoidGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sinh","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Size","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SkipDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Skipgram","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SleepDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Slice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SlidingWindowDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Snapshot","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SnapshotDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SnapshotDatasetV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SobolSample","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Softmax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SoftmaxCrossEntropyWithLogits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Softplus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SoftplusGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Softsign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SoftsignGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpaceToBatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpaceToBatchND","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpaceToDepth","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseAccumulatorApplyGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseAccumulatorTakeGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseAddGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseApplyAdadelta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseApplyAdagrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseApplyAdagradDA","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseApplyAdagradV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseApplyCenteredRMSProp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseApplyFtrl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseApplyFtrlV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseApplyMomentum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseApplyProximalAdagrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseApplyProximalGradientDescent","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseApplyRMSProp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseBincount","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseConcat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseConditionalAccumulator","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseCountSparseOutput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseCross","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseCrossHashed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseCrossV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseDenseCwiseAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseDenseCwiseDiv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseDenseCwiseMul","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseFillEmptyRows","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseFillEmptyRowsGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMatMul","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMatrixAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMatrixMatMul","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMatrixMul","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMatrixNNZ","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMatrixOrderingAMD","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMatrixSoftmax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMatrixSoftmaxGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMatrixSparseCholesky","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMatrixSparseMatMul","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMatrixTranspose","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseMatrixZeros","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseReduceMax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseReduceMaxSparse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseReduceSum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseReduceSumSparse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseReorder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseReshape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseSegmentMean","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseSegmentMeanGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseSegmentMeanWithNumSegments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseSegmentSqrtN","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseSegmentSqrtNGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseSegmentSqrtNWithNumSegments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseSegmentSum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseSegmentSumWithNumSegments","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseSlice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseSliceGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseSoftmax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseSoftmaxCrossEntropyWithLogits","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseSparseMaximum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseSparseMinimum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseSplit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseTensorDenseAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseTensorDenseMatMul","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseTensorSliceDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseTensorToCSRSparseMatrix","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseToDense","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SparseToSparseSetOperation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Spence","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Split","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SplitV","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SqlDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sqrt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SqrtGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Square","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SquaredDifference","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Squeeze","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stack","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StackClose","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StackCloseV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StackPop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StackPopV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StackPush","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StackPushV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StackV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Stage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StageClear","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StagePeek","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StageSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatefulPartitionedCall","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatefulRandomBinomial","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatefulStandardNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatefulStandardNormalV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatefulTruncatedNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatefulUniform","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatefulUniformFullInt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatefulUniformInt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessCase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessIf","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessMultinomial","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessParameterizedTruncatedNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessRandomBinomial","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessRandomGammaV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessRandomGetAlg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessRandomGetKeyCounter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessRandomGetKeyCounterAlg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessRandomNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessRandomNormalV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessRandomPoisson","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessRandomUniform","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessRandomUniformFullInt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessRandomUniformFullIntV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessRandomUniformInt","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessRandomUniformIntV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessRandomUniformV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessSampleDistortedBoundingBox","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessTruncatedNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessTruncatedNormalV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatelessWhile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StaticRegexFullMatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StaticRegexReplace","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatsAggregatorHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatsAggregatorHandleV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatsAggregatorSetSummaryWriter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StatsAggregatorSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StopGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StridedSlice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StridedSliceAssign","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StridedSliceGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringFormat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringJoin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringLength","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringLower","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringNGrams","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringSplit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringSplitV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringStrip","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringToHashBucket","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringToHashBucketFast","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringToHashBucketStrong","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringToNumber","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StringUpper","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Substr","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Sum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SummaryWriter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Svd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Switch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SymbolicGradient","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TFRecordDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TFRecordReader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TFRecordReaderV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TPUCompilationResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TPUCompile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TPUCompileSucceededAssert","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TPUEmbeddingActivations","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TPUExecute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TPUExecuteAndUpdateVariables","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TPUOrdinalSelector","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TPUPartitionedCall","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TPUPartitionedInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TPUPartitionedOutput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TPUReplicateMetadata","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TPUReplicatedInput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TPUReplicatedOutput","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TPUReshardVariables","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TakeDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TakeManySparseFromTensorsMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TakeWhileDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tan","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tanh","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TanhGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TemporaryVariable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArray","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayClose","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayCloseV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayCloseV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayConcat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayConcatV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayConcatV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayGather","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayGatherV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayGatherV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayGradV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayGradV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayGradWithShape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayPack","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayRead","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayReadV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayReadV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayScatter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayScatterV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayScatterV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArraySize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArraySizeV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArraySizeV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArraySplit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArraySplitV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArraySplitV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayUnpack","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayWrite","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayWriteV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorArrayWriteV3","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListConcat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListConcatLists","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListConcatV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListElementShape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListFromTensor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListGather","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListGetItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListLength","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListPopBack","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListPushBack","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListPushBackBatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListReserve","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListResize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListScatter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListScatterIntoExistingList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListScatterV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListSetItem","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListSplit","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorListStack","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorMapErase","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorMapHasKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorMapInsert","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorMapLookup","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorMapSize","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorMapStackKeys","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorScatterAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorScatterMax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorScatterMin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorScatterSub","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorScatterUpdate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorSliceDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorStridedSliceUpdate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TensorSummaryV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextLineDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextLineReader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TextLineReaderV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadPoolDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadPoolHandle","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ThreadUnsafeUnigramCandidateSampler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Tile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TileGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Timestamp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ToBool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TopK","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TopKUnique","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TopKV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TopKWithUnique","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Transpose","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TridiagonalMatMul","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TridiagonalSolve","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TruncateDiv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TruncateMod","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TruncatedNormal","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unbatch","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnbatchDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnbatchGrad","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UncompressElement","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnicodeDecode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnicodeDecodeWithOffsets","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnicodeEncode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnicodeScript","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnicodeTranscode","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UniformCandidateSampler","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unique","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UniqueDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UniqueV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UniqueWithCounts","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UniqueWithCountsV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unpack","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnravelIndex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsortedSegmentJoin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsortedSegmentMax","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsortedSegmentMin","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsortedSegmentProd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnsortedSegmentSum","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Unstage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnwrapDatasetVariant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UpperBound","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VarHandleOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VarIsInitializedOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Variable","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VariableShape","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for VariableV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Where","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for While","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WholeFileReader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WholeFileReaderV2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WindowDataset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WorkerHeartbeat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WrapDatasetVariant","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteAudioSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteFile","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteGraphSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteHistogramSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteImageSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteRawProtoSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteScalarSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteSummary","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xdivy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XlaHostCompute","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XlaRecvFromHost","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for XlaSendToHost","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xlog1py","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Xlogy","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ZerosLike","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Zeta","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ZipDataset","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for MinimizeOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ComputeGradientsOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for ApplyGradientsOptions&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GradientDescentOptimizer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AdadeltaOptimizer","synthetic":true,"types":[]}];
implementors["tensorflow_sys"] = [{"text":"impl RefUnwindSafe for __fsid_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_Status","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_AllocatorAttributes","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_Tensor","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for div_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ldiv_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for lldiv_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __sigset_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for timeval","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for timespec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for fd_set","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __pthread_internal_list","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __pthread_internal_slist","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __pthread_mutex_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __pthread_rwlock_arch_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __pthread_cond_s","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __pthread_cond_s__bindgen_ty_1__bindgen_ty_1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __pthread_cond_s__bindgen_ty_2__bindgen_ty_1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for random_data","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for drand48_data","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __locale_struct","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_TString_Large","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_TString_Offset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_TString_View","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_TString_Raw","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_TString_Small","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_TString","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_Buffer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_StringView","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_SessionOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_Graph","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_OperationDescription","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_Operation","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_Input","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_Output","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_Function","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_FunctionOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_AttrMetadata","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_ImportGraphDefOptions","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_ImportGraphDefResults","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_WhileParams","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_Session","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_DeprecatedSession","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_DeviceList","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_Library","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_ApiDefMap","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_Server","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __locale_data","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __pthread_cond_s__bindgen_ty_1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __pthread_cond_s__bindgen_ty_2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pthread_barrier_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for pthread_barrierattr_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_TString_Union","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_TString__bindgen_ty_1","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_AttrType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_DataType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_Code","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for idtype_t","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TF_TString_Type","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for _bindgen_ty_1","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()